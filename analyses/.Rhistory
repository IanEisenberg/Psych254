all_subj_stroop = rbind(all_subj_stroop,s_df_clean)
#remove practice trials and only use trials where the subject actually responded
d_df_clean = d_df[d_df$type == 'task' & d_df$FB!=-1,]
#refactor dataframe
cat = sapply(d_df_clean, is.factor)
d_df_clean[cat] = lapply(d_df_clean[cat], factor)
d_df_clean$id = factor(d_df_clean$id)
d_df_clean$fs_choice = as.factor(d_df_clean$fs_choice)
d_df_clean$ss_choice = as.factor(d_df_clean$ss_choice)
d_df_clean$stay = d_df_clean$fs_choice == lag(d_df_clean$fs_choice)
d_df_clean$stay = factor(d_df_clean$stay, levels = c(FALSE,TRUE), labels = c("Switch","Stay"))
d_df_clean$transition = factor(d_df_clean$transition, levels = c('rare','common'))
d_df_clean$lag_transition = lag(d_df_clean$transition)
d_df_clean$FB = factor(d_df_clean$FB, levels = c(0,1), labels = c("Unrewarded","Rewarded"))
d_df_clean$lag_FB = lag(d_df_clean$FB)
#remove first row because we are interested in stayes
d_df_clean=d_df_clean[-1,]
#get model-free, model-based index for each subject
decision_rs = glm(stay ~ lag_FB * lag_transition , family = binomial, data = d_df_clean)
stats = data.frame('id' = d_df_clean$id[1],
'IE_freq' = IE_freq,
'IE_infreq' = IE_infreq,
'M_free' = coefficients(decision_rs)[2],
'M_based' = coefficients(decision_rs)[4])
individual_stats = rbind(individual_stats, stats)
#concatenate for group analysis
all_subj_df = rbind(all_subj_df,d_df_clean)
}
#exclude subjects where P(stay)=1 or 0 on any condition (transition*reward)
decision_subj_summary = group_by(all_subj_df, lag_transition, lag_FB, id) %>% summarise('P_stay' = mean(stay)-1)
exclude_subj = decision_subj_summary$id[decision_subj_summary$P_stay==1]
all_subj_df = all_subj_df[!is.element(all_subj_df$id,exclude_subj),]
all_subj_stroop = all_subj_stroop[!is.element(all_subj_stroop$id,exclude_subj),]
individual_stats = individual_stats[!is.element(individual_stats$id,exclude_subj),]
row.names(individual_stats) = seq(nrow(individual_stats))
#Scale IE scores
all_subj_df$IE_freq = scale(all_subj_df$IE_freq)
all_subj_df$IE_infreq = scale(all_subj_df$IE_infreq)
individual_stats$IE_freq = scale(individual_stats$IE_freq)
individual_stats$IE_infreq = scale(individual_stats$IE_infreq)
#model stay based on FB and stay probability
decision_rs = glm(stay ~ lag_FB * lag_transition , family = binomial, data = all_subj_df)
summary(decision_rs)
decision_rs_mixed = glmer(stay ~ lag_FB * lag_transition + (lag_FB*lag_transition | id), family = binomial, data = all_subj_df, control=glmerControl(optimizer="bobyqa"))
summary(decision_rs_mixed)
decision_rs_IE = glmer(stay ~ lag_FB * lag_transition * IE_freq + lag_FB * lag_transition * IE_infreq  + (lag_FB*lag_transition | id), family = binomial, data = all_subj_df, control=glmerControl(optimizer="bobyqa"))
summary(decision_rs_IE)
decision_rs_IE_fixed= glm(stay ~ lag_FB * lag_transition * IE_freq + lag_FB * lag_transition * IE_infreq  , family = binomial, data = all_subj_df)
summary(decision_rs_IE_fixed)
#linear contrast comparing the effects of the two separate IE
esticon(decision_rs_IE,c(0,0,0,0,0,0,0,0,0,0,1,-1))
#extract model-based index to plot against IE
individual_stats$r_M_based = coef(decision_rs_mixed)$id[,4]
individual_stats$r_M_Free= coef(decision_rs_mixed)$id[,2]
individual_stats = gather(individual_stats,"condition","IE",starts_with("IE"))
#extract P(stay) for transition x reward and confint
inv_logit = function(x) {exp(x)/(1+exp(x))}
ci = data.frame(confint(decision_rs_mixed, method = "Wald"))
ci_by_condition = data.frame(matrix(c(ci['(Intercept)',],
ci['(Intercept)',] + ci['lag_FBUnrewarded',],
ci['(Intercept)',] + ci['lag_transitionrare',],
ci['(Intercept)',] + ci['lag_FBUnrewarded',] + ci['lag_transitionrare',] + ci['lag_FBUnrewarded:lag_transitionrare',]),
4,byrow=T))
ci_by_condition$ci25 = as.numeric(ci_by_condition$X1)
ci_by_condition$ci975 = as.numeric(ci_by_condition$X2)
ci_by_condition = ci_by_condition[,3:4]
ci_by_condition=data.frame(lapply(ci_by_condition,inv_logit))
n=length(unique(all_subj_df$id))
decision_summary = group_by(decision_subj_summary,lag_transition, lag_FB) %>% summarise('P_stay' = mean(P_stay))
decision_summary$SE = sqrt(decision_summary$P_stay*(1-decision_summary$P_stay)/n)
decision_summary$P_stay_model =inv_logit(predict(decision_rs_mixed,decision_summary,re.form=~0))
decision_summary = cbind(decision_summary,ci_by_condition)
decision_summary = group_by(decision_subj_summary,lag_transition, lag_FB) %>% summarise('P_stay' = mean(P_stay))
decision_summary
decision_subj_summary
decision_summary = group_by(decision_subj_summary,lag_transition, lag_FB) %>% summarise('P_stay' = mean(P_stay), 'SE2' = sd(P_stay)/sqrt(n))
decision_summary
sd(decision_subj_summary$P_stay)
decision_summary = group_by(decision_subj_summary,lag_transition, lag_FB) %>% summarise('P_stay' = mean(P_stay), 'SE2' = sd(P_stay))
decision_summary
decision_summary = group_by(decision_subj_summary,lag_transition, lag_FB) %>% summarise('Stay_mean' = mean(P_stay), 'Stay_SE' = sd(P_stay))
decision_summary
decision_summary = group_by(decision_subj_summary,lag_transition, lag_FB) %>% summarise('Stay_mean' = mean(P_stay), 'Stay_SE' = sd(P_stay)/sqrt(n))
decision_summary
decision_summary = group_by(decision_subj_summary,lag_transition, lag_FB) %>% summarise('P_stay_mean' = mean(P_stay), 'P_stay_SE' = sd(P_stay)/sqrt(n))
decision_summary
ggplot(data = decision_summary, aes(x = lag_transition, y = P_stay_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
geom_linerange(aes(ymin = P_stay_mean-P_stay_SE, ymax = P_stay_mean+P_stay_SE)) + facet_grid(.~lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data") + theme_bw()
ggplot(data = decision_summary, aes(x = lag_transition, y = P_stay_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
geom_linerange(aes(ymin = P_stay_mean-P_stay_SE, ymax = P_stay_mean+P_stay_SE)) + facet_grid(.~lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(.5, 1)) + ggtitle("Actual Data") + theme_bw()
n
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(.5, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(.5, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ci_by_condition
ci = data.frame(confint(decision_rs_mixed, method = "Wald"))
ci
ci_by_condition = data.frame(matrix(c(ci['(Intercept)',],
ci['(Intercept)',] + ci['lag_FBUnrewarded',],
ci['(Intercept)',] + ci['lag_transitionrare',],
ci['(Intercept)',] + ci['lag_FBUnrewarded',] + ci['lag_transitionrare',] + ci['lag_FBUnrewarded:lag_transitionrare',]),
4,byrow=T))
ci_by_condition$ci25 = as.numeric(ci_by_condition$X1)
ci_by_condition$ci975 = as.numeric(ci_by_condition$X2)
ci_by_condition = ci_by_condition[,3:4]
ci_by_condition=data.frame(lapply(ci_by_condition,inv_logit))
ci_by_condition
ci = data.frame(confint(decision_rs_mixed, method = "Wald"))
ci_by_condition = data.frame(matrix(c(ci['(Intercept)',],
ci['(Intercept)',] + ci['lag_FBUnrewarded',],
ci['(Intercept)',] + ci['lag_transitionrare',],
ci['(Intercept)',] + ci['lag_FBUnrewarded',] + ci['lag_transitionrare',] + ci['lag_FBUnrewarded:lag_transitionrare',]),
4,byrow=T))
ci_by_condition$ci25 = as.numeric(ci_by_condition$X1)
ci_by_condition$ci975 = as.numeric(ci_by_condition$X2)
ci_by_condition = ci_by_condition[,3:4]
ci_by_condition
ci = data.frame(confint(decision_rs_mixed, method = "Wald"))
ci_by_condition = data.frame(matrix(c(ci['(Intercept)',],
ci['(Intercept)',] + ci['lag_FBUnrewarded',],
ci['(Intercept)',] + ci['lag_transitionrare',],
ci['(Intercept)',] + ci['lag_FBUnrewarded',] + ci['lag_transitionrare',] + ci['lag_FBUnrewarded:lag_transitionrare',]),
4,byrow=T))
ci_by_condition
ci
ci['(Intercept)',]
ci['(Intercept)',] + ci['lag_FBUnrewarded',]
ci['lag_FBUnrewarded',]
ci = data.frame(confint(decision_rs_mixed, method = "Wald"))
ci_by_condition = data.frame(matrix(c(ci['(Intercept)',],
ci['(Intercept)',] + ci['lag_FBRewarded',],
ci['(Intercept)',] + ci['lag_transitioncommon',],
ci['(Intercept)',] + ci['lag_FBRewarded',] + ci['lag_transitioncommon',] + ci['lag_FBRewarded:lag_transitioncommon',]),
4,byrow=T))
ci_by_condition$ci25 = as.numeric(ci_by_condition$X1)
ci_by_condition$ci975 = as.numeric(ci_by_condition$X2)
ci_by_condition = ci_by_condition[,3:4]
ci_by_condition=data.frame(lapply(ci_by_condition,inv_logit))
ci_by_condition
decision_summary$P_stay_mean-2*decision_summary$P_stay_SE
decision_summary$P_stay_mean+2*decision_summary$P_stay_SE
cbind(decision_summary$P_stay_mean-2*decision_summary$P_stay_SE),decision_summary$P_stay_mean+2*decision_summary$P_stay_SE)
cbind(decision_summary$P_stay_mean-2*decision_summary$P_stay_SE),decision_summary$P_stay_mean+2*decision_summary$P_stay_SE))
decision_summary$P_stay_mean-2*decision_summary$P_stay_SE
cbind(decision_summary$P_stay_mean-2*decision_summary$P_stay_SE),decision_summary$P_stay_mean-2*decision_summary$P_stay_SE)
cbind(decision_summary$P_stay_mean-2*decision_summary$P_stay_SE,decision_summary$P_stay_mean-2*decision_summary$P_stay_SE)
cbind(decision_summary$P_stay_mean-2*decision_summary$P_stay_SE,decision_summary$P_stay_mean+2*decision_summary$P_stay_SE)
ci_by_condition
decision_summary
ci
decision_summary$P_stay_model_mean =inv_logit(predict(decision_rs_mixed,decision_summary,re.form=~0))
decision_summary = cbind(decision_summary,ci_by_condition)
ggplot(data = decision_summary, aes(x = lag_transition, y = P_stay_model_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
geom_linerange(aes(ymin = ci25, ymax = ci975)) + facet_grid(.~lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Model Predictions") + theme_bw()
decision_summary$P_stay_model_mean =inv_logit(predict(decision_rs_mixed,decision_summary,re.form=~0))
decision_summary = cbind(decision_summary,ci_by_condition)
ggplot(data = decision_summary, aes(x = lag_transition, y = P_stay_model_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
geom_linerange(aes(ymin = ci25, ymax = ci975)) + facet_grid(.~lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Model Predictions") + theme_bw()
ci_by_condition
decision_summary
ci
decision_rs_mixed
summary(decision_rs_mixed)
fixef(decision_rs_mixed)
decision_summary
ci
fixef(decision_rs_mixed)
predict(decision_rs_mixed,decision_summary,re.form=~0)
decision_summary$P_stay_model_mean =inv_logit(fixef(decision_rs_mixed))
ggplot(data = individual_stats, aes(x=IE, y = r_M_based, color = condition)) + geom_point() + geom_smooth(method = lm, alpha = .2) + xlab("Incongruency Effect (z score)") + ylab("Model-based index") + theme_bw()
individual_stats
a=individual_stats[1:21,]
a
plot(a$r_M_based,IE)
plot(a$r_M_based,a$IE)
b=individual_stats[22:42,]
plot(b$r_M_based,b$IE)
b=individual_stats[22:42,]
a
decision_rs_IE
summary(decision_rs_IE)
decision_rs_IE = glmer(stay ~ lag_FB * lag_transition * IE_freq - (lag_FB+lag_transition)*IE_freq + lag_FB * lag_transition * IE_infreq  + (lag_FB*lag_transition | id), family = binomial, data = all_subj_df, control=glmerControl(optimizer="bobyqa"))
decision_rs_IE = glmer(stay ~ lag_FB * lag_transition * IE_freq + lag_FB * lag_transition * IE_infreq  + (lag_FB*lag_transition | id), family = binomial, data = all_subj_df, control=glmerControl(optimizer="bobyqa"))
summary(decision_rs_IE)
decision_rs_IE_subtract = glmer(stay ~ lag_FB * lag_transition * IE_freq - (lag_FB+lag_transition)*IE_freq + lag_FB * lag_transition * IE_infreq  - (lag_FB+lag_transition)*IE_infreq + (lag_FB*lag_transition | id), family = binomial, data = all_subj_df, control=glmerControl(optimizer="bobyqa"))
summary(decision_rs_IE)
summary(decision_rs_IE_subtract)
decision_summary
decision_predict = group_by(decision_subj_summary,lag_transition, lag_FB) %>%
summarise('P_stay_mean' = mean(P_stay))
decision_predict
individual_stats
individual_stats$IE
left_join(individual_stats,decision_predict)
cbind(individual_stats,decision_predict)
?replicate
?rep
rep(decision_predict,2)
decision_predict
expand.grid(transition = c('rare','common'), FB = c('Unrewarded', 'Rewarded'))
individual_stats$IQ
individual_stats$IE
decision_predict = expand.grid(transition = c('rare','common'), FB = c('Unrewarded', 'Rewarded'),individual_stats$IE)
decision_predict
22*4
decision_predict = expand.grid(transition = c('rare','common'), FB = c('Unrewarded', 'Rewarded'),
'individual_stats$IE)
decision_predict = expand.grid(transition = c('rare','common'), FB = c('Unrewarded', 'Rewarded'),
individual_stats$IE)
decision_predict = expand.grid(transition = c('rare','common'), FB = c('Unrewarded', 'Rewarded'),
individual_stats$IE[individual_stats$condition='IE_freq'])
decision_predict = expand.grid(transition = c('rare','common'), FB = c('Unrewarded', 'Rewarded'),
individual_stats[individual_stats$condition='IE_freq',]$IE)
individual_stats[individual_stats$condition='IE_freq',]$IE
decision_predict = expand.grid(transition = c('rare','common'), FB = c('Unrewarded', 'Rewarded'),
individual_stats[individual_stats$condition=='IE_freq',]$IE)
decision_predict
decision_predict = expand.grid(transition = c('rare','common'), FB = c('Unrewarded', 'Rewarded'),
IE_freq = individual_stats[individual_stats$condition=='IE_freq',]$IE)
str(decision_predict)
class(decision_predict)
?predict
predict(decision_rs_IE,decision_predict,re.form = ~0)
decision_predict = expand.grid(lag_transition = c('rare','common'), lag_FB = c('Unrewarded', 'Rewarded'),
IE_freq = individual_stats[individual_stats$condition=='IE_freq',]$IE)
predict(decision_rs_IE,decision_predict,re.form = ~0)
decision_predict = expand.grid(lag_transition = c('rare','common'), lag_FB = c('Unrewarded', 'Rewarded'),
IE_freq = individual_stats[individual_stats$condition=='IE_freq',]$IE)
decision_predict$IE_infreq = individual_stats[individual_stats$condition=='IE_infreq',]$IE)
cbind(decision_predict, 'IE_infreq' = individual_stats[individual_stats$condition=='IE_infreq',]$IE))
cbind(decision_predict, individual_stats[individual_stats$condition=='IE_infreq',]$IE))
cbind(decision_predict, individual_stats[individual_stats$condition=='IE_infreq',]$IE)
predict(decision_rs_IE,'IE_infreq' = decision_predict,re.form = ~0)
cbind(decision_predict, 'IE_infreq' =  individual_stats[individual_stats$condition=='IE_infreq',]$IE)
decision_predict = cbind(decision_predict, 'IE_infreq' =  individual_stats[individual_stats$condition=='IE_infreq',]$IE)
head(decision_predict)
predict(decision_rs_IE,decision_predict,re.form = ~0)
decision_predict$P_stay=predict(decision_rs_IE,decision_predict,re.form = ~0)
decision_predict
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point()
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth()
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth()
decision_predict
predict(decision_rs_IE,decision_predict,re.form = ~0)
inv_logit(predict(decision_rs_IE,decision_predict,re.form = ~0))
decision_predict$P_stay=inv_logit(predict(decision_rs_IE,decision_predict,re.form = ~0))
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth()
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth()
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm)
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm)
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm)
ggsave(file = '../Plots/Mbased_vs_freq.tiff')
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm)
ggsave(file = '../Plots/Mbased_vs_infreq.tiff')
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggsave(file = '../Plots/Mbased_vs_freq.tiff')
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggsave(file = '../Plots/Mbased_vs_infreq.tiff')
#Stroop, for confidence
stroop_summary = group_by(all_subj_stroop, type, congruent) %>% summarise('meanRT' = mean(rt), 'sdRT' = sd(rt)/sqrt(n))
stroop_subj_summary = group_by(all_subj_stroop, type, congruent, id) %>% summarise('meanRT' = mean(rt))
ggplot(data = stroop_summary, aes(x = congruent, y = meanRT, fill = congruent )) + geom_bar(stat = 'identity') + facet_grid(.~type) +
geom_linerange(aes(ymin = meanRT-2*sdRT, ymax = meanRT+2*sdRT)) + theme_bw()
ggsave(file = '../Plots/Stroop.tiff')
ggplot(data = stroop_subj_summary, aes(x = congruent, y = meanRT, fill = congruent )) + geom_bar(stat = 'identity') +
facet_wrap(~id*type)  + theme_bw()
ggsave(file = '../Plots/Stroop_bySubj.tiff')
#Decision plots
ggplot(data = decision_summary, aes(x = lag_transition, y = P_stay_model_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
geom_linerange(aes(ymin = ci25, ymax = ci975)) + facet_grid(.~lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Model Predictions") + theme_bw()
ggsave(file = '../Plots/Decision_Performance_Model.tiff')
ggplot(data = decision_summary, aes(x = lag_transition, y = P_stay_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
geom_linerange(aes(ymin = P_stay_mean-P_stay_SE, ymax = P_stay_mean+P_stay_SE)) + facet_grid(.~lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(.5, 1)) + ggtitle("Actual Data") + theme_bw()
ggsave(file = '../Plots/Decision_Performance.tiff')
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggsave(file = '../Plots/Decision_Performance_bySubj.tiff')
ggplot(data = individual_stats, aes(x=IE, y = r_M_based, color = condition)) + geom_point() + geom_smooth(method = lm, alpha = .2) + xlab("Incongruency Effect (z score)") + ylab("Model-based index") + theme_bw()
ggsave(file = '../Plots/Mbased_vs_Stroop.tiff')
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggsave(file = '../Plots/Mbased_vs_freq.tiff')
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggsave(file = '../Plots/Mbased_vs_infreq.tiff')
ggplot(data = individual_stats, aes(x=IE, y = r_M_Free, color = condition)) + geom_point() + geom_smooth(method = lm, alpha = .2) + xlab("Incongruency Effect (z score)") + ylab("Model-Free index") + theme_bw()
ggsave(file = '../Plots/Mfree_vs_Stroop.tiff')
ggplot(data = decision_summary, aes(x = lag_transition, y = P_stay_model_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
geom_linerange(aes(ymin = ci25, ymax = ci975)) + facet_grid(.~lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Model Predictions") + theme_bw()
decision_summary
decision_summary$P_stay_model_mean =inv_logit(predict(decision_rs_mixed,all_subj_df,re.form~0))
decision_summary$P_stay_model_mean =inv_logit(predict(decision_rs_mixed,expand.grid(lag_transition = c('rare','common'), lag_FB = c('Unrewarded', 'Rewarded'),re.form~0))
decision_summary = cbind(decision_summary,ci_by_condition)
decision_summary$P_stay_model_mean =inv_logit(predict(decision_rs_mixed,expand.grid(lag_transition = c('rare','common'), lag_FB = c('Unrewarded', 'Rewarded')),re.form~0))
decision_summary = cbind(decision_summary,ci_by_condition)
decision_rs_mixed
predict(decision_rs_mixed,expand.grid(lag_transition = c('rare','common'), lag_FB = c('Unrewarded', 'Rewarded'))
)
decision_summary$P_stay_model_mean =inv_logit(predict(decision_rs_mixed,expand.grid(lag_transition = c('rare','common'), lag_FB = c('Unrewarded', 'Rewarded')),re.form=~0))
decision_summary = cbind(decision_summary,ci_by_condition)
ggplot(data = decision_summary, aes(x = lag_transition, y = P_stay_model_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
geom_linerange(aes(ymin = ci25, ymax = ci975)) + facet_grid(.~lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Model Predictions") + theme_bw()
expand.grid(lag_transition = c('rare','common'), lag_FB = c('Unrewarded', 'Rewarded')
)
inv_logit(predict(decision_rs_mixed,expand.grid(lag_transition = c('rare','common'), lag_FB = c('Unrewarded', 'Rewarded')),re.form=~0))
decision_summary$P_stay_model_mean =inv_logit(predict(decision_rs_mixed,expand.grid(lag_transition = c('rare','common'), lag_FB = c('Unrewarded', 'Rewarded')),re.form=~0))
decision_summary
expand.grid(lag_FB = c('Unrewarded', 'Rewarded'),lag_transition = c('rare','common'))
decision_summary$P_stay_model_mean =inv_logit(predict(decision_rs_mixed,expand.grid(lag_FB = c('Unrewarded', 'Rewarded'),lag_transition = c('rare','common')),re.form=~0))
decision_summary = cbind(decision_summary,ci_by_condition)
decision_summary
ggplot(data = decision_summary, aes(x = lag_transition, y = P_stay_model_mean, fill = lag_transition)) + geom_bar(stat = 'identity') +
geom_linerange(aes(ymin = ci25, ymax = ci975)) + facet_grid(.~lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Model Predictions") + theme_bw()
ggsave(file = '../Plots/Decision_Performance_Model.tiff')
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
decision_subj_summary
dim(decision_subj_summary)
decision_subj_summary = group_by(all_subj_df, lag_transition, lag_FB, id) %>% summarise('P_stay' = mean(stay)-1, 'IE_infreq' = IE_infreq)
decision_subj_summary = group_by(all_subj_df, lag_transition, lag_FB, id) %>% summarise('P_stay' = mean(stay)-1, 'IE_infreq' = mean(IE_infreq))
decision_subj_summary
decision_subj_summary = group_by(all_subj_df, id, lag_transition, lag_FB) %>% summarise('P_stay' = mean(stay)-1, 'IE_infreq' = mean(IE_infreq))
decision_subj_summary
decision_subj_summary = group_by(all_subj_df, id, lag_transition, lag_FB) %>% summarise('P_stay' = mean(stay)-1, 'IE_infreq' = mean(IE_infreq), 'IE_freq' = mean(IE_freq))
dim(decision_predict)
dim(decision_subj_summary)
decision_predict
decision_subj_summary
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
summary(decision_rs_IE)
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
decision_rs_freq = glmer(stay ~ lag_FB * lag_transition * IE_freq   + (lag_FB*lag_transition | id), family = binomial, data = all_subj_df, control=glmerControl(optimizer="bobyqa"))
decision_rs_IE = glmer(stay ~ lag_FB * lag_transition * IE_freq + lag_FB * lag_transition * IE_infreq  + (lag_FB*lag_transition | id), family = binomial, data = all_subj_df, control=glmerControl(optimizer="bobyqa"))
decision_rs_freq = glmer(stay ~ lag_FB * lag_transition * IE_freq   + (lag_FB*lag_transition | id), family = binomial, data = all_subj_df, control=glmerControl(optimizer="bobyqa"))
decision_rs_freq = glmer(stay ~ lag_FB * lag_transition * IE_freq   + (lag_FB*lag_transition | id), family = binomial, data = all_subj_df)
summary(decision_rs_freq)
ggplot(data = decision_subj_summary, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth() + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth() + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm) + ggtitle('Model predictions for P(stay)') + theme_bw()
?geom_smooth
ggplot(data = decision_subj_summary, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = individual_stats, aes(x=IE, y = r_M_based, color = condition)) + geom_point() + geom_smooth(method = lm, alpha = .2) + xlab("Incongruency Effect (z score)") + ylab("Model-based index") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') + annotate("text", x = 4, y = 25, label = "Some text") +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') + annotate("text", x = 4, y = .8, label = "Some text") +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') + annotate("text", x = 2, y = .8, label = "Some text") +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') + annotate(IE_freq, x = 2, y = .8, label = "Some text") +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') + annotate("text", x = 2, y = .8, label = IE_freq) +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') + annotate("text", x = 2, y = .8, label = round(IE_freq) +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') + annotate("text", x = 2, y = .8, label = round(IE_freq)) +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
round(.55)
round(.55,2)
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition)) + geom_bar(stat = 'identity') + annotate("text", x = 2, y = .8, label = round(IE_freq,2)) +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
decision_subj_summary
ggplot(data = decision_subj_summary, aes(x = lag_transition, y = P_stay, fill = lag_transition, label = round(IE_freq,2))) + geom_bar(stat = 'identity') + annotate("text", x = 2, y = .8) +
facet_wrap(~id*lag_FB) + ylab("Stay Probability") + xlab("") +
coord_cartesian(ylim = c(0, 1)) + ggtitle("Actual Data by Subject") + theme_bw()
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
?par
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
par(new=T)
ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
par(new=F)
ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
+ ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw() +
ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw() +
geom_point(data = decision_subj_summary, aes(x = IE_freq, y = P_stay, color = lag_transition))
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw() +
geom_point(data = decision_subj_summary, aes(x = IE_freq, y = P_stay)
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw() +
geom_point(data = decision_subj_summary, aes(x = IE_freq, y = P_stay))
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
rbind(decision_predict,decision_subj_summary)
rbind(decision_predict,decision_subj_summary[,2:6])
ggplot(data = decision_predict, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_predict, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_freq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
ggplot(data = decision_subj_summary, aes(x = IE_infreq, y = P_stay, color = lag_transition)) + geom_point() + facet_wrap(~lag_FB) + geom_smooth(method = lm, se = F) + ggtitle('Model predictions for P(stay)') + theme_bw()
library(dplyr)
library(ggplot2)
library(car)
setwd("~/Box Sync/Programming/Courses/Psych254/Psych254/analyses")
library(dplyr)
library(ggplot2)
library(car)
d <- read.csv("../data/scales.csv")
d$age.group <- factor(d$age.group)
ggplot(data = d, aes(x = age,  fill = age.group)) + geom_bar()
ggplot(data = d, aes(x = trial, y = correct, color = trial)) + geom_point(position = position_jitter(w = 0,h = .1))
ci95.norm <- function(x) {
se = sqrt(mean(x)*(1-mean(x))/length(x))
return (c(mean(x)-qnorm(.975)*se, mean(x)+qnorm(.975)*se))
}
ci95.t <- function(x) {
se = sqrt(mean(x)*(1-mean(x))/length(x))
return (c(mean(x)-qt(.975,length(x))*se, mean(x)+qt(.975,length(x))*se))
}
library(boot)
library(bootstrap)
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) -
quantile(bootstrap(1:length(x),
10000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),
10000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) -
mean(x,na.rm=na.rm)}
ci95.norm(d$correct)
ci95.t(d$correct)
Mike_method = c(mean(d$correct)-ci.low(d$correct), mean(d$correct)+ci.high(d$correct))
mean.fun = function(x, idx) mean(x[idx], na.rm = TRUE)
boot.ci(boot(d$correct,mean.fun,R =999), type = 'norm')
Mike_method
plot_data = group_by(d,age.group,condition) %>% summarise('proportion.correct' = mean(correct),'ci.low' = ci.low(correct),'ci.high' = ci.high(correct), "ci95t.low" = ci95.t(correct)[1],"ci95t.high" = ci95.t(correct)[2], "ci95n.low" = ci95.norm(correct)[1],"ci95n.high" = ci95.norm(correct)[2])
ggplot(data = plot_data, aes(y = proportion.correct, x = age.group, fill = condition)) +
geom_bar(stat="identity") +
geom_linerange(aes(ymin = proportion.correct-ci.low, ymax = proportion.correct+ci.high)) +
geom_linerange(aes(ymin = ci95t.low, ymax = ci95t.high), linetype = 2,position=position_jitter(width=.4)) +
geom_linerange(aes(ymin = ci95n.low, ymax = ci95n.high), linetype = 3,position=position_jitter(width=.4)) +
facet_wrap(~condition)
library(lme4)
m1 = glm(correct ~ age.group * condition, family = "binomial", data = d)
summary(m1)
msi = left_join(group_by(d,trial) %>% summarise('rating'=mean(correct)),d)
mss = left_join(group_by(d,subid) %>% summarise('rating'=mean(correct)),d)
msi
msi = left_join(group_by(d,trial) %>% summarise('correct'=mean(correct)),d)
mss = left_join(group_by(d,subid) %>% summarise('correct'=mean(correct)),d)
str(d)
msi = left_join(group_by(d,trial) %>% summarise('rating'=mean(correct)),d)
mss = left_join(group_by(d,subid) %>% summarise('rating'=mean(correct)),d)
m2 = lm(rating ~ age.group*condition, data = msi)
summary(m2)
msi
mss
msi
dim(msi)
unique(msi)
summary(aov(rating ~ trial, data = msi))
summary(aov(rating ~ subid, data = mss))
msi = group_by(d,trial) %>% summarise('rating'=mean(correct))
mss = group_by(d,subid) %>% summarise('rating'=mean(correct))
msi
mss
msi
summary(aov(rating ~ trial, data = msi))
msi = left_join(group_by(d,trial) %>% summarise('rating'=mean(correct)),d)
mss = left_join(group_by(d,subid) %>% summarise('rating'=mean(correct)),d)
summary(aov(rating ~ subid, data = msi))
msi = group_by(d,trial) %>% summarise('rating'=mean(correct))
mss = group_by(d,subid) %>% summarise('rating'=mean(correct))
msi = group_by(d,trial) %>% summarise('rating'=mean(correct))
mss = group_by(d,subid) %>% summarise('rating'=mean(correct))
msi
mss
m_mixed = glmer(correct ~ condition*age.group + (condition*age.group|trial) + (1|subid), family = "binomial", data = d)
m_mixed = glmer(correct ~ condition*age.group + (condition*age.group|trial) + (1|subid), family = "binomial", data = d, control=glmerControl(optimizer="bobyqa"))
summary(m_mixed)
summary(m1)
fixef(m_mixed)
summary(m_mixed)
m1 = glm(correct ~ age.group * condition, family = "binomial", data = d)
summary(m1)
msi = group_by(d,trial) %>% summarise('rating'=mean(correct))
mss = group_by(d,subid) %>% summarise('rating'=mean(correct))
msi
head(d)
