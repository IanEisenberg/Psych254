d2a$Recall
d2a$Recall[1,2]
d2a$Recall(1,2)
d2a$Recall
d2a$Recall(c(1,2),)
d2a = ex4
contrasts(d2a$Valence) = contr.treatment(3, base=2)
contrasts(d2a$Valence)
rs.lmer1 = lmer(Recall ~ Task*Valence + (1 | Subject), d2a)
print(summary(rs.lmer1))
rs2a_1 = lmer(Recall ~ Task + (1 | Subject), d2a)
print(summary(rs2a_1))
rs2a_1 = lmer(Recall ~ Valence + (1 | Subject), d2a)
print(summary(rs2a_1))
ask*
ask*
ask*
ask*
rs2a_1 = lmer(Recall ~ Task*Valence + (1 | Subject), d2a)
print(summary(rs2a_1))
rs2a_2 = lmer(Recall ~ Task + (1 | Subject), d2a)
anova(rs2a_1,rs2a_2)
rs2a_1 = lmer(Recall ~ Task + (1 | Subject), d2a)
print(summary(rs2a_1))
rs2a_2 = lmer(Recall ~ Task+Recall + (1 | Subject), d2a)
print(summary(rs2a_2))
rs2a_3 = lmer(Recall ~ Task*Recall + (1 | Subject), d2a)
print(summary(rs2a_3))
print(anova(rs2a_1,rs2a_2,rs2a_3))
rs2a_2 = lmer(Recall ~ Task+Recall + (1 | Subject), d2a)
rs2a_1 = lmer(Recall ~ Task + (1 | Subject), d2a)
print(summary(rs2a_1))
rs2a_2 = lmer(Recall ~ Task+Valencel + (1 | Subject), d2a)
print(summary(rs2a_2))
rs2a_1 = lmer(Recall ~ Task + (1 | Subject), d2a)
print(summary(rs2a_1))
rs2a_2 = lmer(Recall ~ Task+Valence + (1 | Subject), d2a)
print(summary(rs2a_2))
rs2a_3 = lmer(Recall ~ Task*Valence + (1 | Subject), d2a)
print(summary(rs2a_3))
print(anova(rs2a_1,rs2a_2,rs2a_3))
rs2a_1 = lmer(Recall ~ Task + (1 | Subject), d2a)
print(summary(rs2a_1))
contrasts(d2a$Task)
print(anova(rs2a_1,rs2a_2,rs2a_3))
V
V
rs.lmer2 = lmer(Recall ~ Valence*Task + (1 + Valence + Task | Subject), d2a)
print(summary(rs.lmer2))
rs.lmer2 = lmer(Recall ~ Task + (1  Task | Subject), d2a)
print(summary(rs.lmer2))
rs.lmer2 = lmer(Recall ~ Task + (1  Task | Subject), d2a)
rs.lmer2 = lmer(Recall ~ Task + (1 +  Task | Subject), d2a)
print(summary(rs.lmer2))
rs2a_4 = lmer(Recall ~ Task+Valence (1 + Valence + Task |         Subject), d2a)
print(summary(rs2a_4))
rs2a_4 = lmer(Recall ~ Task+Valence (1 + Valence + Task |         Subject), d2a)
str(d2a)
rs2a_4 = lmer(Recall ~ Task+Valence (1 + Valence + Task |         Subject), d2a)
rs2a_4 = lmer(Recall ~ Task + Valence (1 + Valence + Task |         Subject), d2a)
rs2a_4 = lmer(Recall ~ Task  (1 + Valence + Task |         Subject), d2a)
d2a
rs2a_4 = lmer(Recall ~ Task + Valence + (1 + Valence + Task |         Subject), d2a)
print(summary(rs2a_4))
anova(rs2a_1,rs2a_4)
print(anova(rs2a_1,rs2a_4))
ex4L <- read.table("~/Courses/Psych252-Stats/Week 8/Week 8-data/ex4L.txt", header=TRUE, quote="\"")
View(ex4L)
d1 = ex4
d1 = ex4L
ex4L
sink('rkv-ex4.r')
d2b = ex4L
str(d2b)
ggplot(data = d2b, aes(Valence, Recall, color = Task)) +
geom_boxplot() +  facet_grid(. ~Task)
rs2b_1 = lmer(Recall ~ Task + (1 | Subject), d2b)
print(summary(rs2b_1))
rs2b_2 = lmer(Recall ~ Task+Valence + (1 | Subject), d2b)
print(summary(rs2b_2))
rs2b_3 = lmer(Recall ~ Task*Valence + (1 | Subject), d2b)
print(summary(rs2b_3))
print(anova(rs2b_1,rs2b_2,rs2b_3))
print(anova(rs2b_1,rs2b_2,rs2b_3))
)
print(summary(rs2b_3))
rs2b_1 = lmer(Recall ~ Task + (1 | Subject), d2b)
print(summary(rs2b_1))
rs2b_2 = lmer(Recall ~ Task+Valence + (1 | Subject), d2b)
print(summary(rs2b_2))
rs2b_3 = lmer(Recall ~ Task*Valence + (1 | Subject), d2b)
print(summary(rs2b_3))
print(anova(rs2b_1,rs2b_2,rs2b_3))
str(d2b)
ggplot(data = d2b, aes(Valence, Recall, color = Task)) +
geom_boxplot() +  facet_grid(. ~Task)
library(ggplot2)
ggplot(data = d2b, aes(Valence, Recall, color = Task)) +
geom_boxplot() +  facet_grid(. ~Task)
rs2b_2 = lmer(Recall ~ Task+Valence + (1 | Subject), d2b)
print(summary(rs2b_2))
rs2b_3 = lmer(Recall ~ Task*Valence + (1 | Subject), d2b)
print(summary(rs2b_3))
d2a = read.csv('http://web.stanford.edu/class/psych252/data/ex4.csv')
rs2b_1 = lmer(Recall ~ Task + (1 | Subject), d2b)
print(summary(rs2b_1))
rs2b_2 = lmer(Recall ~ Task+Valence + (1 | Subject), d2b)
print(summary(rs2b_2))
rs2b_3 = lmer(Recall ~ Task*Valence + (1 | Subject), d2b)
print(summary(rs2b_3))
rs2b_1 = lmer(Recall ~ Task + (1 | Subject), d2b)
print(summary(rs2b_1))
rs2b_2 = lmer(Recall ~ Task+Valence + (1 | Subject), d2b)
print(summary(rs2b_2))
contrasts(d2b$Valence)
contrasts(d2b$Valence) = contr.treatment(3, base=2)
contrasts(d2b$Valence)
rs2b_2 = lmer(Recall ~ Task+Valence + (1 | Subject), d2b)
print(summary(rs2b_2))
rs2b_3 = lmer(Recall ~ Task*Valence + (1 | Subject), d2b)
print(summary(rs2b_3))
print(anova(rs2b_1,rs2b_2,rs2b_3)
)
rs2b_4 = lmer(Recall ~ Task+Valence + (1 + Task + Valence| Subject), d2b)
print(summary(rs2b_4))
rs2b_5 = lmer(Recall ~ Task*Valence + (1 + Task*Valence| Subject), d2b)
print(summary(rs2b_5))
rs2b_1 = lmer(Recall ~ Task + (1 | Subject), d2b)
print(summary(rs2b_1))
rs2b_2 = lmer(Recall ~ Task+Valence + (1 | Subject), d2b)
print(summary(rs2b_2))
rs2b_3 = lmer(Recall ~ Task*Valence + (1 | Subject), d2b)
print(summary(rs2b_3))
rs2b_4 = lmer(Recall ~ Task+Valence + (1 + Task + Valence| Subject), d2b)
print(summary(rs2b_4))
rs2b_5 = lmer(Recall ~ Task*Valence + (1 + Task*Valence| Subject), d2b)
print(summary(rs2b_5))
rs2b_4 = lmer(Recall ~ Task+Valence + (1 + Task + Valence| Subject), d2b)
print(summary(rs2b_4))
rs2b_5 = lmer(Recall ~ Task*Valence + (1 + Task*Valence| Subject), d2b)
print(summary(rs2b_5))
print(anova(rs2b_4, rs2b_5)))
print(anova(rs2b_4, rs2b_5))
rs2b_4 = lmer(Recall ~ Task+Valence + (1 + Task + Valence| Subject), d2b)
print(summary(rs2b_4))
rs2b_5 = lmer(Recall ~ Task*Valence + (1 + Task*Valence| Subject), d2b)
print(summary(rs2b_5))
print(anova(rs2b_1,rs2b_4, rs2b_5))
print(anova(rs2a_1,rs2a_4))
rs2b_4 = lmer(Recall ~ Task+Valence + (1 + Task + Valence| Subject), d2b)
print(summary(rs2b_4))
rs2b_5 = lmer(Recall ~ Task*Valence + (1 + Task*Valence| Subject), d2b)
print(summary(rs2b_5))
rs2b_1 = lmer(Recall ~ Task + (1 | Subject), d2b)
print(summary(rs2b_1))
print(summary(rs2b_4))
print(summary(rs2b_5))
rs2b_4 = lmer(Recall ~ Task+Valence + (1 + Task | Subject), d2b)
print(summary(rs2b_4))
d2b
str(d2b)
Valence
Valence
rs2b_4 = lmer(Recall ~ Task+Valence + (1 + Task + Valence| Subject), d2b)
print(summary(rs2b_4))
rs2b_5 = lmer(Recall ~ Task*Valence + (1 + Task*Valence| Subject), d2b)
print(summary(rs2b_5))
print(anova(rs2b_1,rs2b_4, rs2b_5))
print(anova(rs2b_4, rs2b_5))
d03= read.csv('http://web.stanford.edu/class/psych252/data/timeflies.csv')
d3= read.csv('http://web.stanford.edu/class/psych252/data/timeflies.csv')
str(d3)
summary(d3)
str(d3)
rowMeans(d3)
?rowMeans
d3$comclips1.rat
d3$comclip1.rat
d3$comclip*
len(d3)
length(d3)
str(d3)
rowmeans(d3)
rowMeans(d3)
mean(d3$statsclip10.len)
rowMeans(d3, dims=2)
rowMeans(d3, dims=1)
length(d3$statsclip10.len)
colMeans(d3)
mean(d3$statsclip10.len)
d3$X
colMeans(d3)
colMeans(d3)[2]
colMeans(d3)[2:11]
colMeans(d3)[2:11:22]
colMeans(d3)[2:11,22]
colMeans(d3)[c(2:11,22)]
colMeans(d3)[2:11]
colMeans(d3)[2:11]
d3
rowMeans(d3[2:12])
rowMeans(d3[2:12]))
cbind(rowMeans(d3[2:12]), rowMeans(d3[2:12]), rowMeans(d3[2:12]),
rowMeans(d3[2:12]))
cbind(rowMeans(d3[2:11]), rowMeans(d3[12:21]), rowMeans(d3[22:31]),
rowMeans(d3[32:41]))
d3$sumScores= cbind(rowMeans(d3[2:11]), rowMeans(d3[12:21]), rowMeans(d3[22:31]),
rowMeans(d3[32:41]))
d3
d3_a = d3[,c(1,42:45)]
length(d3)
d3
str(d3)
d3
d3[,42]
d3_a = d3[,c(1,42)]
d3_a
d3_a[,2]
d3_a[,2][1]
d3_a[,2][,1]
d3$sumScores= c(rowMeans(d3[2:11]), rowMeans(d3[12:21]), rowMeans(d3[22:31]),
rowMeans(d3[32:41]))
d3= read.csv('http://web.stanford.edu/class/psych252/data/timeflies.csv')
d3$comclips.rat = rowMeans(d3[2:11])
d3$statsclips.rat = rowMeans(d3[12:21])
d3$comclips.len = rowMeans(d3[22:31])
d3$statsclips.len = rowMeans(d3[32:41])
str(d3)
d3[,42:45]
?boxplot
boxplot(d3$comclips.rat)
boxplot(d3[,42:45])
boxplot(d3[,42:43])
boxplot(d3[,42:43])
title('hey')
boxplot(d3[,44:45])
title('Length')
boxplot(d3[,42:43])
title('Fun rating')
boxplot(d3[,44:45])
title('Length')
d3$diff.rat = d3$comclips.rat - d3$statsclips.rat
d3$diff.len = d3$comclips.len - d3$statsclips.len
d3$diff.rat
d3$comclips.rat
d3$statsclips.rat
scale(d3$comclips.rat+d3$statsclips.rat,scale=F)
d3$scalesum = scale(d3$comclips.rat+d3$statsclips.rat,scale=F)
rs3_1 = lm(d3$diff.rat ~ 1, data = d3)
print(rs3_1)
summary(rs3_1)
rs3_3 = lm(diff.len ~ diff.rat, data = d3)
summary(rs3_3)
d3$scalesu.rat = scale(d3$comclips.rat+d3$statsclips.rat,scale=F)
d3$scalesum.rat = scale(d3$comclips.rat+d3$statsclips.rat,scale=F)
rs3_3 = lm(diff.len ~ diff.rat + scalesum.rat, data = d3)
summary(rs3_3)
rs3_1 = lm(diff.rat ~ 1, data = d3)
summary(rs3_1)
rs3_2 = lm(diff.len ~ 1, data = d3)
summary(rs3_2)
rs3_4 = lm(diff.len ~ diff.rat, data = d3)
summary(rs3_4)
rs3_4 = lm(diff.len ~ diff.rat + scalesum.rat, data = d3)
summary(rs3_4)
d2a = read.table('http://www.stanford.edu/class/psych252/data/ex4.txt')
d2a
str(d2a)
str(d2b)
d0 = read.csv('http://web.stanford.edu/class/psych252/data/kv0.csv')
d0$subidr = factor(d0$subidr)
summary(d0)
str(d0)
head(d0)
d1 = melt(d0)
names(d1)[3] = 'nsol'
names(d1)[4] = 'score'
d1$nsol = factor(d1$nsol, labels = c('one', 'two','many'))
library('ggplot2')
library('lme4')
library('reshape2')
library('languageR')
library('lmerTest')
d0 = read.csv('http://web.stanford.edu/class/psych252/data/kv0.csv')
d0$subidr = factor(d0$subidr)
summary(d0)
str(d0)
head(d0)
d1 = melt(d0)
names(d1)[3] = 'nsol'
names(d1)[4] = 'score'
d1$nsol = factor(d1$nsol, labels = c('one', 'two','many'))
contrasts(d1$attnr) = c(-1, 1)
contrasts(d1$nsol) = cbind(c(-1, 0, 1), c(1, -2, 1))
contrasts(d1$attnr) = c(-1, 1)
contrasts(d1$nsol) = cbind(c(-1, 0, 1), c(1, -2, 1))
rs1a_4 = lmer(score ~ attnr * nsol_num + (1 | subidr), data = d1, REML = F)
d1$nsol_num = as.numeric(d1$nsol)
rs1a_4 = lmer(score ~ attnr * nsol_num + (1 | subidr), data = d1, REML = F)
summary(rs1a_4)
lmerTest::summary(rs1a_4)
d3= read.csv('http://web.stanford.edu/class/psych252/data/timeflies.csv')
d3
d3$comclips.rat = rowMeans(d3[2:11])
d3$statsclips.rat = rowMeans(d3[12:21])
d3$comclips.len = rowMeans(d3[22:31])
d3$statsclips.len = rowMeans(d3[32:41])
d3$comclips.len
d3$statsclips.len
d0 = read.csv('http://web.stanford.edu/class/psych252/data/kv0.csv')
d0$subidr = factor(d0$subidr)
summary(d0)
str(d0)
head(d0)
d1 = melt(d0)
names(d1)[3] = 'nsol'
names(d1)[4] = 'score'
d1$nsol = factor(d1$nsol, labels = c('one', 'two','many'))
#effect code contrasts for attention and ncol factors
contrasts(d1$attnr) = c(-1, 1)
contrasts(d1$nsol) = cbind(c(-1, 0, 1), c(1, -2, 1))
#Plot our data for fixed effects
ggplot(data = d1, aes(nsol, score, color = attnr)) +
geom_point() + geom_smooth(aes(group=1)) +
facet_grid(. ~ attnr) + theme_classic() + ggtitle('condition by attention vs. Performance')
ggplot(data = d1, aes(nsol, score, color = attnr)) +
geom_point() + geom_smooth(aes(group=1)) +
facet_grid(. ~ attnr) + theme_classic() + ggtitle('condition by attention vs. Performance')
ggplot(data = d1, aes(x = as.numeric(nsol), y = score, color = attnr)) +
facet_wrap(~subidr+attnr, ncol = 10, scales = 'free') + theme_classic() +
geom_point() + stat_smooth(method = 'lm') + ggtitle('Performance vs. condition by subjects and attention')
ggplot(data = d1, aes(x = as.numeric(nsol), y = score, color = attnr)) +
facet_wrap(~subidr+attnr, ncol = 5, scales = 'free') + theme_classic() +
geom_point() + stat_smooth(method = 'lm') + ggtitle('Performance vs. condition by subjects and attention')
View(cor.table)
2
d = ggplot(diamonds, aes(x=carat, y=price)) +
geom_point()
library('ggplot')
library(ggplot2)
d = ggplot(diamonds, aes(x=carat, y=price)) +
geom_point()
d  +
geom_rug()
```{r}
temp_df = left_join(ds_means,subinfo, by = "subid")
subtraction_sub = subset(temp_df, operand == "subtraction")
ggplot(data = subtraction_sub, aes(objective.test, facilitation)) +
geom_point() + geom_smooth(method = "lm")
library(tidyr)
library(dplyr)
sem <- function(x) {sd(x) / sqrt(length(x))}
ci95 <- function(x) {sem(x) * 1.96}
subinfo <- read.csv("../data/sklar_expt6_subinfo_corrected.csv")
d.a <- read.csv("../data/sklar_expt6a_corrected.csv")
d.b <- read.csv("../data/sklar_expt6b_corrected.csv")
setwd("C:/Users/Ian/Box Sync/Programming/Courses/Psych254/Psych254/analyses")
subinfo <- read.csv("../data/sklar_expt6_subinfo_corrected.csv")
d.a <- read.csv("../data/sklar_expt6a_corrected.csv")
d.b <- read.csv("../data/sklar_expt6b_corrected.csv")
d.a.gather = d.a %>%
gather(subid, RT, 8:28)
d.b.gather = d.b %>%
gather(subid, RT, 8:28)
d_bind = bind_rows(d.a.gather,d.b.gather)
d_bind$subid = strtoi(gsub("X", "", d_bind$subid))
subinfo$cat.subjective.test = as.factor(subinfo$subjective.test)
d = left_join(subinfo,d_bind)
d$presentation.time <- factor(d$presentation.time)
levels(d$operand) <- c("addition","subtraction")
qplot(RT, geom = "histogram", data = d)
g = glm(cat.subjective.test ~ objective.test, family = binomial, data =subinfo)
summary(g)
with(subinfo,plot(objective.test, subjective.test))
curve(predict(g,data.frame(objective.test = x), type="resp"), add = T)
ds = subset(d, subjective.test == 0 & objective.test < .6)
ds_means = group_by(ds,subid,presentation.time, operand, congruent) %>%
summarise("mean" = mean(RT, na.rm = T)) %>%
spread(congruent,mean)
ds_means$facilitation = ds_means$no - ds_means$yes
ds_stats = ds_means %>%
group_by(operand, presentation.time) %>% summarise("Mean" = mean(facilitation), "SE"= sem(facilitation))
ggplot(data = ds_stats, aes(x = presentation.time, y = Mean, fill = operand)) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = Mean-SE, ymax = Mean+SE)) +
facet_grid(.~operand) +
ylab('facilitation (ms)') +
xlab('Presentation Duration')
temp_df = left_join(ds_means,subinfo, by = "subid")
subtraction_sub = subset(temp_df, operand == "subtraction")
ggplot(data = subtraction_sub, aes(objective.test, facilitation)) +
geom_point() + geom_smooth(method = "lm")
d_means = group_by(d,subid,presentation.time, operand, congruent) %>%
summarise("mean" = mean(RT, na.rm = T)) %>%
spread(congruent,mean)
d_means$facilitation = d_means$no - d_means$yes
d_stats = d_means %>%
group_by(operand, presentation.time) %>% summarise("Mean" = mean(facilitation), "SE"= sem(facilitation))
d_stats
d_means
temp_df = left_join(ds_means,subinfo, by = "subid")
temp_df = left_join(d_means,subinfo, by = "subid")
subtraction_sub = subset(temp_df, operand == "subtraction")
ggplot(data = subtraction_sub, aes(objective.test, facilitation)) +
geom_point() + geom_smooth(method = "lm")
min(d$objective.test)
d_means
subtraction_sub
mean(subtraction_sub$objective.test)
mean(subtraction_sub$objective.test)
subtraction_sub$objective.test-.5
lm(subtraction_sub ~ objective.test - .5, subtraction_sub)
lm(subtraction_sub ~ (objective.test - .5), subtraction_sub)
subtraction_sub$objective.test-.5
?center
?scale
lm(subtraction_sub ~ (objective.test), subtraction_sub)
rs = lm(facilitation ~ (objective.test - .5), subtraction_sub)
rs = lm(facilitation ~ (objective.test - .5), data = subtraction_sub)
rs = lm(facilitation ~ (objective.test), data = subtraction_sub)
summary(rs)
rs = lm(facilitation ~ (objective.test+5), data = subtraction_sub)
rs = lm(facilitation ~ scale(objective.test), data = subtraction_sub)
subtraction_sub$c_obj.test = subtraction_sub$objective.test-.5
rs = lm(facilitation ~ c_obj.test, data = subtraction_sub)
summary(rs)
?cor.test
cor.test(subtraction_sub$objective.test, subtraction_sub$facilitation)
ds_means = group_by(ds,subid,presentation.time, operand, congruent) %>%
summarise("mean" = mean(RT, na.rm = T)) %>%
spread(congruent,mean)
ds_means$facilitation = ds_means$no - ds_means$yes
ds_stats = ds_means %>%
group_by(operand, presentation.time) %>% summarise("Mean" = mean(facilitation), "SE"= sem(facilitation))
temp_df = left_join(ds_means,subinfo, by = "subid")
subtraction_sub = subset(temp_df, operand == "subtraction")
cor.test(subtraction_sub$objective.test, subtraction_sub$facilitation)
subtraction_sub$c_obj.test = subtraction_sub$objective.test-.6
rs = lm(facilitation ~ c_obj.test, data = subtraction_sub)
summary(rs)
subtraction_sub$c_obj.test = subtraction_sub$objective.test-.5
rs = lm(facilitation ~ c_obj.test, data = subtraction_sub)
summary(rs)
max(subtraction_sub$objective.test)
subtraction_sub$c_obj.test = subtraction_sub$objective.test-.5
rs = lm(facilitation ~ c_obj.test, data = subtraction_sub)
summary(rs)
cor.test(subtraction_sub$objective.test, subtraction_sub$facilitation)
ds_means
temp_df
cor.test(temp_df$objective.test,temp_df$facilitation)
summary(cor.test(subtraction_sub$objective.test, subtraction_sub$facilitation))
print(cor.test(subtraction_sub$objective.test, subtraction_sub$facilitation))
ds
head(ds)
min(subtraction_sub$objective.test)
ds$distance = ds$target - ds$prime.result
head(ds)
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geomt_point()
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point()
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point(aes(alpha = .2))
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point(position = position_jitter(.1))
ds$distance = ds$target - ds$prime.result
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point(aes(alpha - .2), position = position_jitter(.1))
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point(aes(alpha = .2), position = position_jitter(.1))
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point(aes(alpha = .1), position = position_jitter(.1))
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point(aes(alpha = .1), position = position_jitter(.1)) +
facet_grid(~. operand)
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point(aes(alpha = .1), position = position_jitter(.1)) +
facet_grid(~. operand)
head(ds)
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point(aes(alpha = .1), position = position_jitter(.1)) +
facet_grid(. ~ operand)
ggplot(data = ds, aes( x = distance, y = RT, color = congruent))  +
geom_point(aes(alpha = .1), position = position_jitter(.1)) +
geom_smooth() + facet_grid(. ~ operand)
ds
head(ds)
summary(lm(RT ~ congruent, data = ds))
summary(lm(RT ~ congruent + operand, data = ds))
summary(lm(RT ~ congruent * operand, data = ds))
summary(lm(RT ~ congruent * operand + objective.test, data = ds))
ds
head(ds)
library(lme4)
summary(lm(RT ~ congruent * operand + objective.test + distance, data = ds))
summary(lm(RT ~ (congruent + objective.test + distance) * operand, data = ds))
summary(lm(RT ~ (congruent + objective.test + distance, data = ds))
head(ds)
summary(lm(RT ~ (congruent + objective.test + distance, data = ds))
summary(lm(RT ~ congruent + objective.test + distance, data = ds))
ds$c.obj.test = ds$objective.test - .5
summary(lm(RT ~ congruent + c.obj.test + distance, data = ds))
ds$c.obj.test
mean(ds$c.obj.test)
summary(lm(RT ~ congruent + c.obj.test + distance, data = ds))
ds$distance
summary(lm(RT ~ congruent + c.obj.test + abs(distance), data = ds))
ds$c.obj.test = ds$objective.test - .5
summary(lm(RT ~ congruent + c.obj.test + abs(distance), data = ds))
summary(lm(RT ~ (congruent + c.obj.test + abs(distance))*operand, data = ds))
